(()=>{"use strict";const t=new class{constructor(){this.board=new class{constructor(t,e,s,i){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.radius=s||20,this.fontSize=i||25,this.canvas.width=t||300,this.canvas.height=e||400}appendTo(t){const e=document.querySelector(t);e.append(this.canvas),this.canvas.width=e.offsetWidth,this.canvas.height=e.offsetHeight}drawCircle(t,e,s){this.context.beginPath(),this.context.arc(t,e,s,0,2*Math.PI),this.context.stroke(),this.context.fillStyle="#fff",this.context.fill(),this.context.fillStyle="#000"}drawNode(t,e,s){this.drawCircle(t,e,this.radius),this.context.font=`${this.fontSize}px Arial`,this.context.textAlign="center",this.context.fillText(s,t,e+this.fontSize/2)}drawLine(t,e,s,i){this.context.beginPath(),this.context.moveTo(t,e),this.context.lineTo(s,i),this.context.stroke()}clear(){this.context.fillStyle="#fff",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.fill(),this.context.fillStyle="#000"}},this.nodes=[],this.edges=[],this.target=null,this.drawTo=null,this.shift=!1,this.functions=[],this.update(),this.board.canvas.addEventListener("dblclick",(t=>{this.target||this.addNode(this.nodes.length+1,t.clientX,t.clientY)}))}update(){this.draw(),this.checkAddEdge(),setTimeout((()=>{this.update()}),1e3/60)}addNode(t,e,s){const i={x:e||Math.floor(Math.random()*this.board.canvas.width),y:s||Math.floor(Math.random()*this.board.canvas.height),label:t};this.nodes.push(i),this.setEvent()}addEdge(t,e){const s={from:t,to:e};this.edges.push(s),this.setEvent(),this.target=null}removeNode(t){this.nodes=this.nodes.filter((e=>e.label!==t))}removeEdge(t){const{from:e,to:s}=t;this.edges=this.edges.filter((t=>t.from!==e||t.to!==s))}draw(){this.board.clear(),this.drawEdges(),this.drawLine(),this.drawNodes()}drawNodes(){this.nodes.forEach((t=>{this.board.drawNode(t.x,t.y,t.label)}))}drawEdges(){this.edges.forEach((t=>this.drawEdge(t)))}drawLine(){this.drawTo&&this.target&&(this.shift?this.board.drawLine(this.target.x,this.target.y,this.drawTo.x,this.drawTo.y):this.nodes=this.nodes.map((t=>t.label===this.target.label?{...t,...this.drawTo}:t)),this.setEvent())}checkAddEdge(){this.shift&&this.nodes.forEach((t=>{this.target&&this.drawTo&&t.label!==this.target.label&&Math.abs(t.x-this.drawTo.x)<=this.board.radius&&Math.abs(t.y-this.drawTo.y)<=this.board.radius&&this.addEdge(this.target.label,t.label)}))}drawEdge(t){let e=null,s=null;if(this.nodes.forEach((i=>{i.label==t.from&&(e=i),i.label==t.to&&(s=i)})),!e||!s)return this.removeEdge(t);this.board.drawLine(e.x,e.y,s.x,s.y)}setEvent(){this.nodes.map(((t,e)=>{this.board.canvas.removeEventListener("click",this.functions[e]),this.functions[e]=function(e,s){Math.abs(e.clientX-t.x)<=s.board.radius&&Math.abs(e.clientY-t.y)<=s.board.radius&&(s.target=t)},this.board.canvas.addEventListener("click",(t=>this.functions[e](t,this)))})),window.addEventListener("mousemove",(t=>{this.target||this.nodes.forEach((e=>{Math.abs(e.x-t.clientX)<=this.board.radius&&Math.abs(e.y-t.clientY)<=this.board.radius&&(this.target=e)})),this.shift=t.shiftKey,1===t.buttons?this.drawTo={x:t.clientX,y:t.clientY}:(this.target=null,this.drawTo=null)}))}exportMatrix(){const t=[],e=[];for(let t=0;t<=this.nodes.length;t++)e.push(0);for(let s=0;s<=this.nodes.length;s++)t.push([...e]);return this.edges.forEach((e=>{t[e.from][e.to]++,t[e.to][e.from]++})),t}};function e(){!function(){const e=document.getElementById("edges");e.innerHTML="",t.edges.forEach((s=>{const i=document.createElement("div");i.addEventListener("click",(()=>{t.removeEdge(s),i.remove()})),i.innerHTML=`<li class="edge list-group-item">\n            ${s.from} đến ${s.to}\n        </li>`,e.append(i)}))}(),function(){const e=document.getElementById("nodes");e.innerHTML="",t.nodes.forEach((t=>{const s=document.createElement("div");s.className="list-group-item",s.innerText=t.label,e.append(s)}))}(),function(){const e=document.getElementById("matrix"),s=e.querySelector("thead"),i=document.createElement("tr"),n=t.exportMatrix();n.forEach(((t,e)=>i.innerHTML+=`<td>${e}</td>`)),s.innerHTML="",s.append(i);const a=e.querySelector("tbody");a.innerHTML="";for(let t=1;t<n.length;t++){const e=document.createElement("tr");for(let s=0;s<n.length;s++)e.innerHTML+=0===s?`<td>${t}</td>`:`<td>${n[t][s]}</td>`;a.append(e)}}()}t.board.appendTo("#canvas"),e(),setInterval(e,500),document.getElementById("removeNodeButton").addEventListener("click",(()=>t.removeNode(t.nodes.length)))})();